!function(t){var e={};function i(o){if(e[o])return e[o].exports;var s=e[o]={i:o,l:!1,exports:{}};return t[o].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=t,i.c=e,i.d=function(t,e,o){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(i.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)i.d(o,s,function(e){return t[e]}.bind(null,s));return o},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=1)}([function(t,e,i){},function(t,e,i){"use strict";i.r(e);var o={img:"",rotate:0,zoom:1,coordinate:{},centerPoint:{x:0,y:0},oldGestureScale:1,oldScaleSize:1,timer:{},lastWheel:{timeStamp:0},width:0,height:0,startTimeStamp:0};var s={touchstart(t){t.touches.length>1&&(t.preventDefault(),this.oldScaleSize=1,this.coordinate.start=this.getDistance({x:t.touches[0].pageX,y:t.touches[0].pageY},{x:t.touches[1].pageX,y:t.touches[1].pageY}),this.getCenterPoint({x:t.touches[0].pageX,y:t.touches[0].pageY},{x:t.touches[1].pageX,y:t.touches[1].pageY}))},touchmove(t){if(2===t.touches.length){t.preventDefault(),this.coordinate.stop=this.getDistance({x:t.touches[0].pageX,y:t.touches[0].pageY},{x:t.touches[1].pageX,y:t.touches[1].pageY});let e=this.coordinate.stop/this.coordinate.start,i=e/this.oldScaleSize;this.oldScaleSize=e,this.zoomTo(i,this.centerPoint.x,this.centerPoint.y)}},wheel(t){if(t.preventDefault(),t.timeStamp<this.lastWheel.timeStamp+300?(this.lastWheel.deltaX=this.lastWheel.deltaX||t.deltaX,this.lastWheel.timeStamp=t.timeStamp):(this.startTimeStamp=t.timeStamp,this.lastWheel.deltaX=t.deltaX,this.lastWheel.timeStamp=t.timeStamp),t.timeStamp>this.startTimeStamp+50)if(this.lastWheel.deltaX){let e=this.myImageDOM.scrollTop+(-t.wheelDeltaY||t.deltaY),i=this.myImageDOM.scrollLeft+(-t.wheelDeltaX||t.deltaX);this.myImageDOM.scrollTo(i,e)}else this.zoomTo(Math.min(Math.abs(-.01*t.deltaY+1),1.6),t.clientX,t.clientY)},initGesture(t){this.oldGestureScale=1,t.preventDefault()},gesturechange(t){t.preventDefault();let e=t.scale-this.oldGestureScale+1;this.oldGestureScale=t.scale,this.zoomTo(e,t.clientX,t.clientY)}};var h={addListener(){this.zoomOutDOM.addEventListener("click",()=>{this.zoomTo(1.6)}),this.zoomInDOM.addEventListener("click",()=>{this.zoomTo(.625)}),this.rotateToDOM.addEventListener("click",()=>{this.rotateTo()}),this.myImageDOM.addEventListener("scroll",t=>{this.onscroll()}),this.isPC()?(this.myImageDOM.addEventListener("gesturechange",t=>{this.gesturechange(t)}),this.myImageDOM.addEventListener("gestureend",t=>{this.initGesture(t)}),this.myImageDOM.addEventListener("gesturestart",t=>{this.initGesture(t)}),this.myImageDOM.addEventListener("wheel",t=>{this.wheel(t)})):(this.myImageDOM.addEventListener("touchstart",t=>{this.touchstart(t)}),this.myImageDOM.addEventListener("touchmove",t=>{this.touchmove(t)}))}};var a={zoomTo(t,e,i){if(this.zoom*t<2&&this.zoom*t>.2){let o,s=this.canvasDOM.offsetTop,h=this.canvasDOM.offsetLeft,a=this.myImageDOM.scrollTop-s,n=this.myImageDOM.scrollLeft-h;this.zoom=this.zoom*t,o=this.rotate%180?this.width*this.zoom/this.img.width*this.img.height:this.width*this.zoom,this.canvasDOM.style.width=o+"px",this.scrollTo(t,e,i,n,a)}},scrollTo(t,e,i,o,s){e||(e=.5*this.width),i||(i=.5*document.body.clientHeight);let h=(o+e)*t-e,a=(s+i)*t-i;this.myImageDOM.scrollTo(h,a)},rotateTo(t){if(console.log(t),this.rotate=null!=t?t:(this.rotate+90)%360,this.img){let t=2*this.width,e=t/this.img.width*this.img.height,i=this.canvasDOM;switch(this.rotate){case 90:i.style.width=this.width*this.zoom/this.img.width*this.img.height+"px",i.height=t,i.width=e,i.getContext("2d").translate(e,0),i.getContext("2d").rotate(.5*Math.PI),i.getContext("2d").drawImage(this.img,0,0,i.height,i.width);break;case 180:i.style.width=this.width*this.zoom+"px",i.height=e,i.width=t,i.getContext("2d").translate(i.width/2,i.height/2),i.getContext("2d").rotate(Math.PI),i.getContext("2d").translate(-i.width/2,-i.height/2),i.getContext("2d").drawImage(this.img,0,0,i.width,i.height);break;case 270:i.style.width=this.width*this.zoom/this.img.width*this.img.height+"px",i.height=t,i.width=e,i.getContext("2d").translate(0,t),i.getContext("2d").rotate(1.5*Math.PI),i.getContext("2d").drawImage(this.img,0,0,i.height,i.width);break;default:i.style.width=this.width*this.zoom+"px",i.height=e,i.width=t,i.getContext("2d").drawImage(this.img,0,0,t,e)}}},onscroll(){this.debounce((function(){console.log(1111)}),300,"scroll")},debounce(t,e,i){this.timer[i]&&(clearTimeout(this.timer[i]),delete this.timer[i]),this.timer[i]=setTimeout(t,e)},isPC(){for(var t=navigator.userAgent,e=["Android","iPhone","SymbianOS","Windows Phone","iPad","iPod"],i=!0,o=0;o<e.length;o++)if(t.indexOf(e[o])>0){i=!1;break}return i},getDistance:(t,e)=>Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)),getCenterPoint(t,e){this.centerPoint={x:(e.x+t.x)/2,y:(e.y+t.y)/2}}};i(0);class n{constructor(t,e){if(!t)return!1;this.option=e,this.DOM=t,this.init(t)}init(t){t.innerHTML='<div class ="viewer">    <nav>        <div class="zoom-out">            <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">                <path d="M19 27C23.4183 27 27 23.4183 27 19C27 14.5817 23.4183 11 19 11C14.5817 11 11 14.5817 11 19C11 23.4183 14.5817 27 19 27Z" stroke="#828282" stroke-width="1.3" stroke-linecap="round" stroke-linejoin="round"/>                <path d="M29 28.9999L24.65 24.6499" stroke="#828282" stroke-width="1.3" stroke-linecap="round" stroke-linejoin="round"/>                <path d="M19 16V22" stroke="#828282" stroke-width="1.3" stroke-linecap="round" stroke-linejoin="round"/>                <path d="M16 19H22" stroke="#828282" stroke-width="1.3" stroke-linecap="round" stroke-linejoin="round"/>            </svg>        </div>        <div  class="zoom-in">            <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">                <path d="M19 27C23.4183 27 27 23.4183 27 19C27 14.5817 23.4183 11 19 11C14.5817 11 11 14.5817 11 19C11 23.4183 14.5817 27 19 27Z" stroke="#828282" stroke-width="1.3" stroke-linecap="round" stroke-linejoin="round"/>                <path d="M29 28.9999L24.65 24.6499" stroke="#828282" stroke-width="1.3" stroke-linecap="round" stroke-linejoin="round"/>                <path d="M16 19H22" stroke="#828282" stroke-width="1.3" stroke-linecap="round" stroke-linejoin="round"/>            </svg>        </div>        <div  class="rotate-to">            <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">                <path d="M20 10L17 13L20 16" stroke="#828282" stroke-width="1.3" stroke-linecap="round" stroke-linejoin="round"/>                <path d="M29 20V17C29 15.9391 28.5786 14.9217 27.8284 14.1716C27.0783 13.4214 26.0609 13 25 13H17" stroke="#828282" stroke-width="1.3" stroke-linecap="round" stroke-linejoin="round"/>                <rect x="12" y="21" width="12" height="9" rx="1.5" stroke="#828282" stroke-width="1.3" stroke-linecap="round" stroke-linejoin="round"/>            </svg>        </div>    </nav>    <div class="my-image">        <div class="img">            <canvas class="my-image-canvas"></canvas>        </div>    </div></div>',this.width=t.offsetWidth,this.height=t.offsetHeight,window.dom=t,this.myImageDOM=t.querySelector(".my-image"),this.render(),this.zoomOutDOM=t.querySelector(".zoom-out"),this.zoomInDOM=t.querySelector(".zoom-in"),this.rotateToDOM=t.querySelector(".rotate-to"),this.canvasDOM=t.querySelector(".my-image-canvas"),this.addListener()}render(){let t=this;this.img=new Image,this.img.onload=function(){let e=2*t.width,i=e/t.img.width*t.img.height;t.canvasDOM.height=i,t.canvasDOM.width=e,t.canvasDOM.getContext("2d").drawImage(t.img,0,0,e,i),t.canvasDOM.style.width=t.width*t.zoom+"px",t.option.onload&&t.option.onload()},this.img.src=this.option.src}}Object.assign(n.prototype,o,h,a,s),window.ImageViewer=n;e.default=n}]);